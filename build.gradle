/* 
*	Packs metadata generator in a .tgz file in ~/dist folder
*	to run:
*			gradle pack
*/
apply plugin: "java"

def isWinOs = System.properties['os.name'].toLowerCase().contains('windows')

sourceSets {
    main {
        java {
            srcDir 'src/src'
        }
    }
	main.output.classesDir = "$rootDir/dist/classes"
}

task cleanDist (type: Delete) {
	def srcDir
	def collection = files { srcDir.listFiles() }
	srcDir = file("dist")
	
	collection.each { f -> delete f }
}

task cleanBuildDir << {
	def srcDir
	def collection = files { srcDir.listFiles() }
	srcDir = file("build")
	
	collection.each {
		f ->
			println f.name
			if(f.name != "generate-metadata.js" && f.name != "generate-metadata.sh") {
				delete f
			}
	}
}

task cleanBin (type: Delete) {
	delete "$rootDir/src/bin"
}

task copyNecessaryFiles() {
	outputs.upToDateWhen {		
		!assemble.didWork
	}
	copy {
		from "$rootDir/build"
		into "$rootDir/dist/bin"
	}
	copy {
		from "$rootDir/package.json"
		into "$rootDir/dist"
	}
}

task packMetadataGenerator (type: Exec) {
	workingDir "$rootDir/dist"
	
	if(isWinOs) {
		commandLine "cmd", "/c"
	}
	
	args "npm", "pack"
}

cleanBin.dependsOn(cleanDist)
compileJava.dependsOn(cleanBin)
cleanBuildDir.dependsOn(compileJava)
copyNecessaryFiles.dependsOn(cleanBuildDir)
packMetadataGenerator.dependsOn(copyNecessaryFiles)

task pack {
	dependsOn packMetadataGenerator
}


