/* 
*	Packs metadata generator in a .tgz file in ~/dist folder
*	To build .tgz
*			gradle packmg
*	To build jar
*			gradle jarmg
*/
apply plugin: "java"

def isWinOs = System.properties['os.name'].toLowerCase().contains('windows')

sourceSets {
    main {
        java {
            srcDir 'src/src'
        }
    }
	main.output.classesDir = "$rootDir/dist/classes"
}

task makeDistDir {
	def distDir = new File("$rootDir/dist")
	distDir.mkdirs()
}

task cleanDist (type: Delete) {
	delete "$rootDir/dist"
}

task cleanDistForJar (type: Delete) {
	delete "$rootDir/dist"
}

task cleanBuildDir (type: Delete){
	delete "$rootDir/build"
}

task cleanBuildDirForJar (type: Delete){
	delete "$rootDir/build"
}

task cleanBin (type: Delete) {
	delete "$rootDir/src/bin"
}

task copyNecessaryFiles {
	doLast {
		copy {
			from "$rootDir/helpers"
			into "$rootDir/dist/bin"
		}
		
		copy {
			from "$rootDir/package.json"
			into "$rootDir/dist"
		}	
	}
}

task packMetadataGenerator (type: Exec) {
	workingDir "$rootDir/dist"
	
	if(isWinOs) {
		commandLine "cmd", "/c", "npm", "pack"
	}
	else {
		commandLine "npm", "pack"
	}
}

jar {
    manifest {
        attributes("Manifest-Version": "1.0",
                   "Main-Class": "com.telerik.metadata.Generator")
    }
}

task copyJarToDist (type: Copy) {
	from "$rootDir/build/libs/android-metadata-generator.jar"
	into "$rootDir/dist"
}

makeDistDir.dependsOn(cleanDist)
cleanBin.dependsOn(makeDistDir)
compileJava.dependsOn(cleanBin)
cleanBuildDir.dependsOn(compileJava)
copyNecessaryFiles.dependsOn(cleanBuildDir)
packMetadataGenerator.dependsOn(copyNecessaryFiles)

task packmg {
	dependsOn packMetadataGenerator
}

cleanDistForJar.dependsOn(jar)
copyJarToDist.dependsOn(cleanDistForJar)
cleanBuildDirForJar.dependsOn(copyJarToDist)

task jarmg {
	dependsOn cleanBuildDirForJar
}


